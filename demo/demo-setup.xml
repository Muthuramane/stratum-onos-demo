<!--
  ~ Copyright 2019-present Open Networking Foundation
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<scenario name="demo-setup" description="Demo setup steps">

    <group name="Demo-Setup">

        <step name="Demo-Setup.Hello" exec="echo Hello :)"/>

        <step name="Demo-Setup.Wipe-Out-Data-Before" exec="onos-wipe-out" requires="^"/>

        <step name="Demo-Setup.Initial-Summary-Check"
              requires="^"
              exec="onos-check-summary ${OCI} [3-9] 0 0 0"/>-->

        <!-- Replace fabric pipeconf with tofino-enabled one -->
        <step name="Demo-Setup.App-Install"
              requires="^"
              exec="onos-app ${OCI} reinstall! ../app/target/fabric-demo-1.0-SNAPSHOT.oar"/>

        <group name="Demo-Setup.Verify-Apps" requires="Demo-Setup.App-Install">
            <parallel var="${OC#}">
                <step name="Demo-Setup.Check-Apps-${#}" exec="onos-check-apps ${OC#} ${ONOS_APPS},org.stratumproject.fabric-demo includes"
                      requires="Demo-Setup.App-Install"/>
            </parallel>
        </group>

        <group name="Demo-Setup.Verify-Pipeconfs" requires="Demo-Setup.App-Install">
            <parallel var="${OC#}">
                <step name="Demo-Setup.Check-Pipeconfs-${#}" exec="onos-check-pipeconfs ${OC#} org.stratumproject.fabric-demo.fpm,org.stratumproject.fabric-demo.mavericks,org.stratumproject.fabric-demo.montara includes"
                      requires="Demo-Setup.App-Install"/>
            </parallel>
        </group>

        <!-- Push the netcfg -->


<!--        <step name="Demo-Setup.Config-Device-s110"
              requires="Demo-Setup.Verify-Pipeconfs" exec="onos-netcfg ${OCI} netcfg/s110.json"/>-->
        <!--<step name="Demo-Setup.Device-Check-1" requires="^"
              exec="onos-check-summary ${OCI} [3-9] 0 [0-9]* [0-9]*"/>
        <step name="Demo-Setup.Config-Device-s221"
              requires="^" exec="onos-netcfg ${OCI} netcfg/s221.json"/>
        <step name="Demo-Setup.Device-Check-2" requires="^"
              exec="onos-check-summary ${OCI} [3-9] 1 [0-9]* [0-9]*"/>
        <step name="Demo-Setup.Config-Device-s232"
              requires="^" exec="onos-netcfg ${OCI} netcfg/s232.json"/>
        <step name="Demo-Setup.Device-Check-3" requires="^"
              exec="onos-check-summary ${OCI} [3-9] 2 [0-9]* [0-9]*"/>
        <step name="Demo-Setup.Config-Device-s111"
              requires="^" exec="onos-netcfg ${OCI} netcfg/s111.json"/>
        <step name="Demo-Setup.Device-Check-4" requires="^"
              exec="onos-check-summary ${OCI} [3-9] 3 [0-9]* [0-9]*"/>

        <step name="Demo-Setup.Device-Check-Ports-s110" requires="^"
              exec="./check-port-count ${OCI} device:s110 2"/>
        <step name="Demo-Setup.Device-Check-Ports-s232" requires="^"
              exec="./check-port-count ${OCI} device:s232 2"/>
        <step name="Demo-Setup.Device-Check-Ports-s221" requires="^"
              exec="./check-port-count ${OCI} device:s221 3"/>
        <step name="Demo-Setup.Device-Check-Ports-s111" requires="^"
              exec="./check-port-count ${OCI} device:s111 3"/>-->

       <step name="Demo-Setup.Push-Netcfg"
              requires="^"
              exec="onos-netcfg ${OCI} netcfg.json"/>

        <step name="Demo-Setup.Set-Device-Stats-Poll-Frequency"
              requires="^"
              exec="onos ${OCI} cfg set org.onosproject.provider.general.device.impl.GeneralDeviceProvider statsPollInterval 2"/>

    </group>
</scenario>
